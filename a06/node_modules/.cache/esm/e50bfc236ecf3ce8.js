let heroData;_6ec‍.x([["getHeroByIdCallback",()=>getHeroByIdCallback]]);_6ec‍.w("./data",[["heroData",["heroData"],function(v){heroData=v}]]);

/**
 * This function searches an array of heroes to find one with a particular id.
 *   By itself, this is an easy task. However, we're going to pretend that the
 *   search operation takes 1.5 seconds to complete and is asynchronous. That
 *   means the getHeroByIdCallback() function should NOT return the correct hero
 *   right away. Instead, it should pretend to be an asynchronous operation
 *   implemented with callbacks. Use the setTimeout() function to wait 1.5
 *   seconds (1500 ms) and then execute the callback function, passing in the
 *   correct hero as a parameter.
 *
 * @param {Array} heroData  The array of hero data to search. For us, this will
 *                          simply be the imported `heroData` from above.
 * @param {Number} id  The id of the hero to find
 * @param {Function} callback  The callback function that should be executed
 *                             after 1.5 seconds, passing back the result of the
 *                             "asynchronous" search operation (aka the hero
 *                             with the correct id)
 * @returns  This function need not return anything
 */
       function getHeroByIdCallback(heroData, id, callback) {
  // setTimeout(callback, 1500)
  // var t = setInterval(callback,1500)

  // clearInterval(t);

  // setTimeout(() => {
  //   let hero = {};
  //   for (let i = 0; i < heroData.length; i++) {
  //     if (heroData[i].id == id) {
  //       hero = heroData[i];
  //       break;
  //     }
  //   }
  // }, 1500);

  // callback(hero);
  let hero = {}
  for(let i = 0; i< heroData.length; i++){
    if(heroData[i].id == id){
      hero = heroData[i]
      break;
    }
  }
  setTimeout(()=>{callback(hero)}, 1500)

  // 1. Find the hero with the correct id in the heroData array

  // 2. Use setTimeout() to execute code after 1.5 seconds. See the assignment
  //    write-up for instructions of how to use setTimeout().

  // 3. After 1.5 seconds, execute the callback() function, passing in the hero
  //    with the correct id as a parameter to the function.
}

// Uncomment this code to locally run your getHeroByIdCallback() function

getHeroByIdCallback(heroData, 2, hero => {
  _6ec‍.g.console.log(`Found the hero with id ${hero.id}`, hero);
});
